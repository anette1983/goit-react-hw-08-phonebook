{"version":3,"file":"static/js/752.90684a98.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/ContactsList/ContactsList.styled.js","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/selectors.js","components/ContactsItem/ContactsItem.styled.js","components/ContactsItem/ContactsItem.jsx","components/ContactsList/ContactsList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/ContactForm/ContactForm.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nconst StyledForm = styled.form`\n  width: 300px;\n  /* border: 1px solid black; */\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  padding: 12px;\n  margin: 15px 0;\n\n  /* display: flex;\nflex-direction: column;\njustify-content: center;\n */\n  & input {\n    padding: 8px;\n    font-family: inherit;\n    border: 1px solid rgba(33, 33, 33, 0.2);\n    border-radius: 4px;\n  }\n\n  & label {\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 8px;\n  }\n`;\n\nexport default StyledForm;\n","import styled from 'styled-components';\n\nconst StyledList = styled.ul`\n  width: 320px;\n  margin: 0;\n  padding: 20px 0 0;\n  list-style: none;\n`;\n\nexport default StyledList;\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts;\nexport const selectFilter = state => state.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilteredContacts = state => {\n  const filterQ = selectFilter(state); //'abc'\n  const { items } = selectContacts(state);\n\n  let filtered = items;\n  if (filterQ !== '') {\n    const normalizedFilter = filterQ.toLowerCase();\n    return items.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n  return filtered;\n};\n\nexport const selectFilteredAndSortedContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    let filtered = contacts.items;\n    if (filter !== '') {\n      const normalizedFilter = filter.toLowerCase();\n      filtered = filtered.filter(contact =>\n        contact.name.toLowerCase().includes(normalizedFilter)\n      );\n    }\n    return [...filtered].sort((a, b) => a.name.localeCompare(b.name));\n  }\n);\n","import styled from 'styled-components';\n\nconst StyledItem = styled.li`\n  width: 310px;\n  margin-bottom: 8px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 4px 4px 4px 8px;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  border-radius: 4px;\n  & span {\n    margin-right: 8px;\n  }\n`;\n\nexport default StyledItem;\n","import { useDispatch } from 'react-redux';\n\nimport { deleteContact } from 'redux/contacts/operations';\nimport StyledItem from './ContactsItem.styled';\nimport StyledButton from 'components/Button.styled';\nimport { useState } from 'react';\nimport { toast } from 'react-toastify';\n\nfunction ContactsItem({ contact }) {\n  const [delId, setDelId] = useState();\n  const dispatch = useDispatch();\n\n  const handleDelete = id => {\n    setDelId(id);\n    dispatch(deleteContact(id));\n    return toast.success(`Contact deleted successfully`);\n  };\n\n  return (\n    <StyledItem>\n      <div>\n        <span>{contact.name}:</span>\n        <span>{contact.number}</span>\n      </div>\n      <StyledButton\n        type=\"button\"\n        onClick={() => handleDelete(contact.id)}\n        disabled={delId === contact.id}\n      >\n        {delId === contact.id ? 'Deleting...' : 'Delete'}\n      </StyledButton>\n    </StyledItem>\n  );\n}\n\nexport default ContactsItem;\n","import { memo } from 'react';\nimport { useSelector } from 'react-redux';\nimport StyledList from './ContactsList.styled';\nimport {\n  // selectError,\n  // selectIsLoading,\n  selectFilteredAndSortedContacts,\n} from 'redux/contacts/selectors';\n// import { fetchContacts } from 'redux/contacts/operations';\nimport ContactsItem from 'components/ContactsItem/ContactsItem';\n\nfunction ContactsList() {\n  const filtered = useSelector(selectFilteredAndSortedContacts);\n  // const isLoading = useSelector(selectIsLoading);\n  // const error = useSelector(selectError);\n  // const dispatch = useDispatch();\n\n  // useEffect(() => {\n  //   dispatch(fetchContacts());\n  // }, [dispatch]);\n\n  return (\n    <>\n      {/* {isLoading && !error && <h3>Request in progress...</h3>}\n      {error && <p>{error}</p>} */}\n      <StyledList>\n        {filtered.map(contact => {\n          return <ContactsItem key={contact.id} contact={contact} />;\n        })}\n      </StyledList>\n    </>\n  );\n}\n\nexport default memo(ContactsList);\n","import styled from 'styled-components';\nconst StyledFilter = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 8px;\n  margin-top: 20px;\n  width: 325px;\n\n  & input {\n    padding: 6px;\n    margin-top: 10px;\n    font-family: inherit;\n    border: 1px solid rgba(33, 33, 33, 0.2);\n    border-radius: 4px;\n  }\n`;\n\nexport default StyledFilter;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport StyledFilter from './Filter.styled';\nimport { selectFilter } from 'redux/contacts/selectors';\n\nconst Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handleFilterChange = event => {\n    const target = event.target.value.trim();\n    dispatch(setFilter(target));\n  };\n\n  return (\n    <StyledFilter>\n      Find contacts by name\n      <input\n        onChange={handleFilterChange}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n      />\n    </StyledFilter>\n  );\n};\n\nexport default Filter;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { addContact } from 'redux/contacts/operations';\nimport StyledForm from './ContactForm.styled';\nimport StyledButton from 'components/Button.styled';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n\n  const { items } = useSelector(selectContacts);\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    name === 'name' ? setName(value) : setNumber(value);\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const newContact = {\n      name,\n      number,\n    };\n    const normalizedName = newContact.name.toLowerCase();\n    const contactsIncludes = items.find(\n      contact =>\n        contact.name.toLowerCase() === normalizedName ||\n        contact.number === newContact.number\n    );\n    if (contactsIncludes) {\n      return toast.error(`${newContact.name} is already in contacts`);\n    }\n\n    dispatch(addContact(newContact));\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <StyledForm onSubmit={handleSubmit}>\n      <label>\n        Name\n        <input\n          onChange={handleChange}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label>\n        Number\n        <input\n          onChange={handleChange}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <StyledButton type=\"submit\">Add contact</StyledButton>\n    </StyledForm>\n  );\n};\n\nexport default ContactForm;\n","import ContactsList from 'components/ContactsList';\nimport Filter from 'components/Filter';\nimport ContactForm from 'components/ContactForm';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectIsLoading } from 'redux/contacts/selectors';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectError } from 'redux/contacts/selectors';\n\nconst Contacts = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <HelmetProvider>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <div>\n        <h1>Your contacts</h1>\n        <ContactForm />\n        <Filter />\n        {isLoading && !error && <h3>Request in progress...</h3>}\n        {error && <p>{error}</p>}\n        <ContactsList />\n      </div>\n    </HelmetProvider>\n  );\n};\n\nexport default Contacts;\n"],"names":["StyledForm","styled","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","selectFilter","filter","selectIsLoading","isLoading","selectError","error","selectFilteredAndSortedContacts","filtered","items","normalizedFilter","toLowerCase","contact","includes","sort","localeCompare","useState","delId","setDelId","dispatch","useDispatch","number","type","onClick","id","deleteContact","toast","disabled","ContactsList","useSelector","memo","onChange","event","target","trim","setFilter","setName","setNumber","handleChange","e","reset","onSubmit","evt","preventDefault","newContact","normalizedName","addContact","pattern","title","required","useEffect","fetchContacts"],"sourceRoot":""}