{"version":3,"file":"static/js/675.5539aa69.chunk.js","mappings":"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","sources":["components/Button.styled.js","components/ContactForm/ContactForm.styled.js","redux/contacts/selectors.js","components/ContactsItem/ContactsItem.jsx","components/ContactsList/ContactsList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts.styled.jsx","components/ContactForm/ContactForm.jsx","components/AddContactModal.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nconst StyledButton = styled.button`\n  color: white;\n  font-weight: 200;\n  padding: 6px 12px;\n  /* font-family: inherit;\n  font-style: normal; */\n\n  /* border: 1px solid #8080808a; */\n  border: 1px solid #ffffff;\n\n  border-radius: 4px;\n\n  transition: box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  }\n`;\n\nexport default StyledButton;\n","import styled from 'styled-components';\n\nconst StyledForm = styled.form`\n  /* width: 300px; */\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  /* border: 1px solid black; */\n  /* border: 1px solid rgba(33, 33, 33, 0.2); */\n  border: 1px solid #fff;\n\n  border-radius: 4px;\n  padding: 32px 16px;\n  /* margin: 15px 0; */\n  background-color: #226c8cbf;\n\n  & input {\n    padding: 8px;\n    font-family: inherit;\n    border: 1px solid rgba(33, 33, 33, 0.2);\n    border-radius: 4px;\n  }\n\n  & label {\n    color: white;\n    font-weight: 200;\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 12px;\n  }\n`;\n\nexport default StyledForm;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts;\nexport const selectFilter = state => state.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilteredContacts = state => {\n  const filterQ = selectFilter(state); //'abc'\n  const { items } = selectContacts(state);\n\n  let filtered = items;\n  if (filterQ !== '') {\n    const normalizedFilter = filterQ.toLowerCase();\n    return items.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n  return filtered;\n};\n\nexport const selectFilteredAndSortedContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    let filtered = contacts.items;\n    if (filter !== '') {\n      const normalizedFilter = filter.toLowerCase();\n      filtered = filtered.filter(contact =>\n        contact.name.toLowerCase().includes(normalizedFilter)\n      );\n    }\n    return [...filtered].sort((a, b) => a.name.localeCompare(b.name));\n  }\n);\n","import ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport Avatar from '@mui/material/Avatar';\n\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nimport Divider from '@mui/material/Divider';\n\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\n\nimport { useState } from 'react';\nimport { toast } from 'react-toastify';\n\nfunction ContactsItem({ contact }) {\n  const [delId, setDelId] = useState();\n  const dispatch = useDispatch();\n\n  const handleDelete = id => {\n    setDelId(id);\n    dispatch(deleteContact(id));\n    return toast.success(`Contact deleted successfully`);\n  };\n\n  return (\n    <>\n      <ListItem\n        secondaryAction={\n          <IconButton\n            // color='warning'\n            edge=\"end\"\n            aria-label=\"delete\"\n            onClick={() => handleDelete(contact.id)}\n            disabled={delId === contact.id}\n          >\n            <DeleteIcon />\n          </IconButton>\n        }\n      >\n        <ListItemAvatar>\n          <Avatar\n            alt={contact.name}\n            src={\n              contact.name\n                ? `https://ui-avatars.com/api/?name=${contact.name[0]}&length=1&background=random&size=262`\n                : 'https://ssl.gstatic.com/s2/oz/images/sge/grey_silhouette.png'\n            }\n          >\n            {/* <ImageIcon /> */}\n          </Avatar>\n        </ListItemAvatar>\n        <ListItemText primary={contact.name} secondary={contact.number} />\n      </ListItem>\n      <Divider variant=\"inset\" />\n    </>\n  );\n}\nContactsItem.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\n\nexport default ContactsItem;\n\n// import PropTypes from 'prop-types';\n// import { useDispatch } from 'react-redux';\n// import { deleteContact } from 'redux/contacts/operations';\n// import StyledItem from './ContactsItem.styled';\n// import StyledButton from 'components/Button.styled';\n// import { useState } from 'react';\n// import { toast } from 'react-toastify';\n\n// function ContactsItem({ contact }) {\n//   const [delId, setDelId] = useState();\n//   const dispatch = useDispatch();\n\n//   const handleDelete = id => {\n//     setDelId(id);\n//     dispatch(deleteContact(id));\n//     return toast.success(`Contact deleted successfully`);\n//   };\n\n//   return (\n//     <StyledItem>\n//       <div>\n//         <span>{contact.name}:</span>\n//         <span>{contact.number}</span>\n//       </div>\n//       <StyledButton\n//         type=\"button\"\n//         onClick={() => handleDelete(contact.id)}\n//         disabled={delId === contact.id}\n//       >\n//         {delId === contact.id ? 'Deleting...' : 'Delete'}\n//       </StyledButton>\n//     </StyledItem>\n//   );\n// }\n// ContactsItem.propTypes = {\n//   id: PropTypes.string,\n//   name: PropTypes.string,\n//   number: PropTypes.string,\n// };\n\n// export default ContactsItem;\n","import * as React from 'react';\nimport List from '@mui/material/List';\n\nimport { memo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectFilteredAndSortedContacts } from 'redux/contacts/selectors';\n\nimport ContactsItem from 'components/ContactsItem/ContactsItem';\n\nfunction ContactsList() {\n  const filtered = useSelector(selectFilteredAndSortedContacts);\n\n  return (\n    <>\n      <List\n        sx={{\n          width: '100%',\n          maxWidth: 720,\n        }}\n      >\n        {filtered.map(contact => {\n          return <ContactsItem key={contact.id} contact={contact} />;\n        })}\n      </List>\n    </>\n  );\n}\n\nexport default memo(ContactsList);\n\n// import { memo } from 'react';\n// import { useSelector } from 'react-redux';\n// import StyledList from './ContactsList.styled';\n// import {\n//   // selectError,\n//   // selectIsLoading,\n//   selectFilteredAndSortedContacts,\n// } from 'redux/contacts/selectors';\n// // import { fetchContacts } from 'redux/contacts/operations';\n// import ContactsItem from 'components/ContactsItem/ContactsItem';\n\n// function ContactsList() {\n//   const filtered = useSelector(selectFilteredAndSortedContacts);\n//   // const isLoading = useSelector(selectIsLoading);\n//   // const error = useSelector(selectError);\n//   // const dispatch = useDispatch();\n\n//   // useEffect(() => {\n//   //   dispatch(fetchContacts());\n//   // }, [dispatch]);\n\n//   return (\n//     <>\n//       {/* {isLoading && !error && <h3>Request in progress...</h3>}\n//       {error && <p>{error}</p>} */}\n//       <StyledList>\n//         {filtered.map(contact => {\n//           return <ContactsItem key={contact.id} contact={contact} />;\n//         })}\n//       </StyledList>\n//     </>\n//   );\n// }\n\n// export default memo(ContactsList);\n","import styled from 'styled-components';\nconst StyledFilter = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 8px;\n  margin-top: 20px;\n  width: 325px;\n\n  & input {\n    /* padding: 6px;\n    margin-top: 10px;\n    font-family: inherit;\n    border: 1px solid rgba(33, 33, 33, 0.2);\n    border-radius: 4px; */\n  }\n`;\n\nexport default StyledFilter;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport StyledFilter from './Filter.styled';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { TextField } from '@mui/material';\n\nconst Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handleFilterChange = event => {\n    const target = event.target.value.trim();\n    dispatch(setFilter(target));\n  };\n\n  return (\n    <StyledFilter>\n      {/* Find contacts by name */}\n      <TextField\n        sx={{ color: 'white' }}\n        label=\"Find contacts by name...\"\n        variant=\"outlined\"\n        onChange={handleFilterChange}\n        type=\"search\"\n        name=\"filter\"\n        value={filter}\n      />\n    </StyledFilter>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\nimport image from '../images/Background-2.png';\nimport girl from '../images/girl-bg.png';\n\nexport const StyledContainer = styled.div`\n  max-height: 100%;\n\n  /* background-image: url(${image}); */\n  /* background-image: url(${girl}); */\n  /* background-position: right center; */\n\n  background-color: #ebc183;\n  /* background-repeat: no-repeat; */\n  /* background-size: contain; */\n\n  display: flex;\n  justify-content: space-between;\n  /* align-items: center; */\n  /* flex-direction: column; */\n  @media (max-width: 768px) {\n    max-width: 100%;\n    min-height: 100vh;\n    background-image: url(${girl});\n    background-repeat: no-repeat;\n    /* background-size: contain; */\n    background-size: cover;\n    background-attachment: fixed;\n    background-position: center;\n  }\n`;\n\nexport const StyledImgWrapper = styled.div`\n  /* background-image: url(${girl}); */\n  max-height: 100vh;\n  max-width: 100vw;\n\n  @media (max-width: 768px) {\n    display: none;\n  }\n`;\n\nexport const StyledFormWrapper = styled.div`\n  margin: 0 auto;\n  padding: 12px;\n  width: 640px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  overflow: hidden;\n  @media screen and (max-width: 768px) {\n    max-width: 100%;\n    background-color: #ebc1837d;\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { addContact } from 'redux/contacts/operations';\nimport StyledForm from './ContactForm.styled';\nimport StyledButton from 'components/Button.styled';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nconst ContactForm = ({ handleClose }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n\n  const { items } = useSelector(selectContacts);\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    name === 'name' ? setName(value) : setNumber(value);\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const newContact = {\n      name,\n      number,\n    };\n    const normalizedName = newContact.name.toLowerCase();\n    const contactsIncludes = items.find(\n      contact =>\n        contact.name.toLowerCase() === normalizedName ||\n        contact.number === newContact.number\n    );\n    if (contactsIncludes) {\n      return toast.error(`${newContact.name} is already in contacts`);\n    }\n\n    dispatch(addContact(newContact));\n    handleClose();\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <StyledForm onSubmit={handleSubmit}>\n      <label>\n        Name\n        <input\n          onChange={handleChange}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label>\n        Number\n        <input\n          onChange={handleChange}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <StyledButton type=\"submit\">Add contact</StyledButton>\n    </StyledForm>\n  );\n};\n\nexport default ContactForm;\n","import { Button, Fab } from '@mui/material';\nimport Dialog from '@mui/material/Dialog';\n// import DialogActions from '@mui/material/DialogActions';\n// import DialogContent from '@mui/material/DialogContent';\n// import DialogContentText from '@mui/material/DialogContentText';\n// import DialogTitle from '@mui/material/DialogTitle';\nimport { useState } from 'react';\nimport AddIcon from '@mui/icons-material/Add';\nimport ContactForm from './ContactForm/ContactForm';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\n\nexport default function FormDialog() {\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <Button variant=\"outlined\" onClick={handleClickOpen}>\n        Add new contact\n      </Button>\n      <Fab\n        onClick={handleClickOpen}\n        color=\"secondary\"\n        sx={{\n          position: 'fixed',\n          // bottom: theme => theme.spacing(2),\n          // right: theme => theme.spacing(2),\n          right: '30px',\n          bottom: '30px',\n        }}\n      >\n        <AddIcon />\n      </Fab>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        PaperProps={{\n          style: {\n            backgroundColor: 'transparent',\n          },\n        }}\n      >\n        <IconButton\n          aria-label=\"close\"\n          onClick={handleClose}\n          sx={{\n            position: 'absolute',\n            right: 8,\n            top: 8,\n            // color: theme => theme.palette.grey[500],\n            color: '#ffffff',\n          }}\n        >\n          <CloseIcon />\n        </IconButton>\n        <ContactForm handleClose={handleClose} />\n\n        {/* <DialogContent> */}\n        {/* <DialogContentText>\n            To subscribe to this website, please enter your email address here.\n            We will send updates occasionally.\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Email Address\"\n            type=\"email\"\n            fullWidth\n            variant=\"standard\"\n          />\n        </DialogContent> */}\n        {/* <DialogActions>\n          <Button onClick={handleClose}>Cancel</Button>\n          <Button onClick={handleClose}>Subscribe</Button>\n        </DialogActions> */}\n      </Dialog>\n    </>\n  );\n}\n","import ContactsList from 'components/ContactsList';\nimport Filter from 'components/Filter';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectIsLoading } from 'redux/contacts/selectors';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectError } from 'redux/contacts/selectors';\nimport {\n  StyledContainer,\n  StyledFormWrapper,\n  StyledImgWrapper,\n} from './Contacts.styled';\nimport girl from '../images/girl-bg.png';\nimport { Typography } from '@mui/material';\nimport AddContactModal from '../components/AddContactModal.jsx';\nimport { selectToken } from 'redux/auth/selectors';\n\nconst Contacts = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n  const token = useSelector(selectToken);\n\n  useEffect(() => {\n    if (token) {\n      dispatch(fetchContacts());\n    }\n  }, [dispatch, token]);\n\n  return (\n    <HelmetProvider>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <StyledContainer>\n        <StyledFormWrapper>\n          <Typography variant=\"h4\" component=\"h1\" mt={2} mb={2}>\n            Your contacts\n          </Typography>\n          {/* <h1>Your contacts</h1> */}\n          <AddContactModal />\n          {/* <ContactForm /> */}\n          <Filter />\n          {isLoading && !error && <h3>Request in progress...</h3>}\n          {error && <p>{error}</p>}\n          <ContactsList />\n        </StyledFormWrapper>\n        <StyledImgWrapper>\n          <img src={girl} alt=\"Smiling girl with mobile phone\" height=\"1620\" />\n        </StyledImgWrapper>\n      </StyledContainer>\n    </HelmetProvider>\n  );\n};\n\nexport default Contacts;\n"],"names":["StyledButton","styled","StyledForm","selectContacts","state","contacts","selectFilter","filter","selectIsLoading","isLoading","selectError","error","selectFilteredAndSortedContacts","createSelector","filtered","items","normalizedFilter","toLowerCase","contact","name","includes","sort","a","b","localeCompare","useState","delId","setDelId","dispatch","useDispatch","ListItem","secondaryAction","IconButton","edge","onClick","id","deleteContact","toast","disabled","Delete","ListItemAvatar","Avatar","alt","src","ListItemText","primary","secondary","number","Divider","variant","ContactsList","useSelector","List","sx","width","maxWidth","map","memo","TextField","color","label","onChange","event","target","value","trim","setFilter","type","StyledContainer","image","girl","StyledImgWrapper","StyledFormWrapper","handleClose","setName","setNumber","handleChange","e","reset","onSubmit","evt","preventDefault","newContact","normalizedName","find","addContact","pattern","title","required","FormDialog","open","setOpen","handleClickOpen","Button","Fab","position","right","bottom","Add","Dialog","onClose","PaperProps","style","backgroundColor","top","Close","token","selectToken","useEffect","fetchContacts","Typography","component","mt","mb","height"],"sourceRoot":""}